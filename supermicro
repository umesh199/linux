import subprocess
import os

# Function to set boot order to network boot using IPMI
def set_boot_order_to_network(ipmi_host, ipmi_user, ipmi_pass):
    try:
        # Command to set boot order to PXE (network boot)
        command = [
            "ipmitool", "-I", "lanplus", "-H", ipmi_host, "-U", ipmi_user, "-P", ipmi_pass,
            "chassis", "bootdev", "pxe", "options=efiboot"
        ]
        
        # Execute the command
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        if result.returncode == 0:
            print(f"Successfully set boot order to network on {ipmi_host}")
        else:
            print(f"Failed to set boot order on {ipmi_host}. Error: {result.stderr.decode()}")
    
    except Exception as e:
        print(f"Exception occurred while setting boot order: {e}")

# Function to reboot the server using IPMI
def reboot_server(ipmi_host, ipmi_user, ipmi_pass):
    try:
        # Command to reboot the server
        command = [
            "ipmitool", "-I", "lanplus", "-H", ipmi_host, "-U", ipmi_user, "-P", ipmi_pass,
            "chassis", "power", "cycle"
        ]
        
        # Execute the command
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        if result.returncode == 0:
            print(f"Successfully rebooted the server {ipmi_host}")
        else:
            print(f"Failed to reboot server {ipmi_host}. Error: {result.stderr.decode()}")
    
    except Exception as e:
        print(f"Exception occurred while rebooting server: {e}")

# Main function to deploy OS via PXE boot using Kickstart
def deploy_os_via_pxe(ipmi_host, ipmi_user, ipmi_pass):
    # Step 1: Set boot order to network boot (PXE)
    set_boot_order_to_network(ipmi_host, ipmi_user, ipmi_pass)
    
    # Step 2: Reboot the server to initiate PXE boot
    reboot_server(ipmi_host, ipmi_user, ipmi_pass)

if __name__ == "__main__":
    # Example IPMI credentials for Supermicro servers
    ipmi_credentials = [
        {
            "ipmi_host": "192.168.1.100",
            "ipmi_user": "admin",
            "ipmi_pass": "password"
        },
        {
            "ipmi_host": "192.168.1.101",
            "ipmi_user": "admin",
            "ipmi_pass": "password"
        }
    ]

    # Loop through each server and deploy OS
    for creds in ipmi_credentials:
        print(f"Deploying OS on {creds['ipmi_host']}")
        deploy_os_via_pxe(creds["ipmi_host"], creds["ipmi_user"], creds["ipmi_pass"])
