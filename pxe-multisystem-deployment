import csv
import os
import sys

# Path to the inventory file
inventory_file = 'servers.csv'
# PXE configuration file path
pxe_config_file = '/var/lib/tftpboot/pxelinux.cfg/default'

def generate_pxe_config(mac_address):
    mac_address = mac_address.lower()  # Normalize MAC address to lowercase

    # Start writing the PXE configuration
    with open(pxe_config_file, 'w') as pxe_file:
        pxe_file.write("DEFAULT menu.c32\n")
        pxe_file.write("PROMPT 0\n")
        pxe_file.write("TIMEOUT 300\n")

        # Flag to check if a match was found
        match_found = False
        
        # Read the inventory and match MAC address
        with open(inventory_file, 'r') as file:
            reader = csv.DictReader(file)
            for row in reader:
                if row['mac_address'].lower() == mac_address:
                    match_found = True
                    ip_address = row['ip_address']
                    server_name = row['server_name']

                    pxe_file.write(f"LABEL {server_name}\n")
                    pxe_file.write(f"    MENU LABEL Booting {server_name} (MAC: {row['mac_address']}, IP: {ip_address})\n")
                    pxe_file.write("    KERNEL vmlinuz\n")
                    pxe_file.write(f"    APPEND initrd=initrd.img ks=http://your-server/ks-{server_name}.cfg ip={ip_address} ksdevice=bootif\n\n")

        # If no match found, write a fallback option
        if not match_found:
            pxe_file.write("LABEL NoMatch\n")
            pxe_file.write("    MENU LABEL No matching server found\n")
            pxe_file.write("    COMMAND reboot\n")

        # Option to go back to the main menu
        pxe_file.write("LABEL Back\n")
        pxe_file.write("    MENU LABEL Back to Main Menu\n")
        pxe_file.write("    COMMAND reboot\n")

def main():
    if len(sys.argv) != 2:
        print("Usage: python generate_pxe.py <MAC_ADDRESS>")
        sys.exit(1)

    mac_address = sys.argv[1]
    generate_pxe_config(mac_address)
    print(f"PXE configuration generated for MAC address: {mac_address}")

if __name__ == '__main__':
    main()
